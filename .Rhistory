?spread
sea_data %>% group_by(coop_name_g7) %>%
count(male, name = "male_count") %>%
spread(male, male_count)
sea_data %>% group_by(coop_name_g7) %>%
count(male, name = "male_count") %>%
mutate(male = ifelse(male == 1, "m", "f")) %>%
spread(male, male_count)
sea_data %>% group_by(frpl_7) %>%
count(male, name = "frpl_count")
sea_data %>% group_by(frpl_7) %>%
count(name = "frpl_count")
sea_data %>% group_by(coop_name_g7) %>%
count(frpl_7, name = "frpl_count")
sea_data %>% group_by(coop_name_g7) %>%
count(frpl_7, name = "frpl_count") %>%
mutate(frpl_7 = paste0("frpl_", frpl_7))
sea_data %>% group_by(coop_name_g7) %>%
count(frpl_7, name = "frpl_count") %>%
mutate(frpl_7 = paste0("frpl_", frpl_7)) %>%
spread(frpl_7, frpl_count)
data.frame("" = 2)
data.frame("emptiness" = rep("", 500))
data.frame("mycat" = sample(c("A", "B", ""), 500, replace = TRUE),"emptiness" = rep("", 500))
zzz <- .Last.value
head(zzz)
table(zzz$mycat)
length(unique(zzz$mycat))
zzz <- data.frame("mycat" = sample(c("A", "B", "   "), 500, replace = TRUE),"emptiness" = rep("", 500))
data.frame("   " = 1:10)
data.frame("  " = 1:10)
data.frame(" " = 1:10)
data.frame("              " = 1:10)
lubridate::today()
summary(sea_data$vendor_ews_score)
set_thresh <- 0.5
conf_count <- table(observed = sea_data$ontime_grad,
pred = sea_data$vendor_ews_score > set_thresh)
conf_count
set_thresh <- mean(sea_data$vendor_ews_score)
conf_count <- table(observed = sea_data$ontime_grad,
pred = sea_data$vendor_ews_score > set_thresh)
conf_count
# Create a proportion table and round for easier interpretation
round(
prop.table(conf_count),
digits = 3
)
sea_data$pct_absent_cat <- round(sea_data$pct_days_absent_7, digits = 0)
table(sea_data$pct_absent_cat)
sea_data$pct_absent_cat[sea_data$pct_absenct_cat >= 30] <- 30
sea_data <- sea_data %>%
group_by(pct_absent_cat) %>% # perform the operation for each value
mutate(abs_ontime_grad = mean(ontime_grad, na.rm = TRUE)) # add a new variable
plot(sea_data$pct_absent_cat, sea_data$abs_ontime_grad)
hist(sea_data$scale_score_7_math)
sea_data$scale_score_7_math[sea_data$scale_score_7_math < 0] <- NA
hist(sea_data$scale_score_7_math)
sea_data <- sea_data %>%
mutate(math_7_cut = ntile(scale_score_7_math, n = 100)) %>%
group_by(math_7_cut) %>% # perform the operation for each value
mutate(math_7_ontime_grad = mean(ontime_grad, na.rm=TRUE)) # add a new variable
plot(sea_data$math_7_cut, sea_data$math_7_ontime_grad)
for(var in c("coop_name_g7", "male", "race_ethnicity")){
print(var)
print(
prop.table(table(sea_data[, var],
"missing_math" = is.na(sea_data$pct_days_absent_7)), 1)
)
}
for(var in c("coop_name_g7", "male", "race_ethnicity")){
print(var)
print(
prop.table(table(sea_data[, var],
"missing_math" = is.na(sea_data$pct_days_absent_7)), 1)
)
}
var
sea_data[, var],
"missing_math" = is.na(sea_data$pct_days_absent_7))
sea_data[, var],
"missing_math" = is.na(sea_data$pct_days_absent_7)
# Chunk 1: knitrSetup
# Set options for knitr
library(knitr)
knitr::opts_chunk$set(comment=NA, warning=FALSE, echo=TRUE,
root.dir = normalizePath("../"),
error=FALSE, message=FALSE, fig.align='center',
fig.width=8, fig.height=6, dpi = 144,
fig.path = "../figure/",
cache.path = "../cache/")
options(width=80)
# Chunk 3: loadWorkspace
# Load the packages you need
library(dplyr)
library(pROC)
library(devtools)
library(future)
# Load the helper functions not in packages
source("../R/functions.R")
# Read in the data
# This command assumes that the data is in a folder called data, below your
# current working directory. You can check your working directory with the
# getwd() command, and you can set your working directory using the RStudio
# environment, or the setwd() command.
load("../data/montucky.rda")
# Chunk 4: check_sid
nrow(sea_data) == n_distinct(sea_data$sid)
# Chunk 5: check_first_sid
table(sea_data$sid == sea_data$sid[[1]]) # test how many times the first sid appears
# Chunk 6: check_sid_by_lea
length(unique(sea_data$sch_g7_lea_id)) # test how many LEAs are in our data
# Chunk 7: check_lea_sid
nrow(sea_data) == n_distinct(sea_data$sid, sea_data$sch_g7_lea_id)
# Chunk 8: make_sid_uniq
sea_data$sid <- paste(sea_data$sid, sea_data$sch_g7_lea_id, sep = "-")
# Chunk 9: check_sid_uniq2
nrow(sea_data) == n_distinct(sea_data$sid)
# Chunk 10: tabulate_years
table(sea_data$year)
table(sea_data$cohort_year)
table(sea_data$cohort_grad_year)
# Chunk 11: tabulate_grad_vars
table(sea_data$year_of_graduation == sea_data$cohort_grad_year)
table(sea_data$ontime_grad)
# Chunk 12: tabulate_grad_vars_years
table(sea_data$year_of_graduation <= sea_data$cohort_grad_year + 1)
# Chunk 13: check_schandlea_names
length(unique(sea_data$first_hs_name))
length(unique(sea_data$first_hs_lea_id))
table(sea_data$coop_name_g7, useNA = "always")
# Chunk 14: check_coops
my_coop <- sea_data$coop_name_g7[50] # select the coop for the 50th observation
# Which districts are in this coop and how many 7th graders do we have for each?
table(sea_data$sch_g7_lea_id[sea_data$coop_name_g7 == my_coop],
useNA = "always")
# which schools?
table(sea_data$sch_g7_name[sea_data$coop_name_g7 == my_coop],
useNA = "always")
# Chunk 15
table(sea_data$male, useNA="always")
# Chunk 18: check_ontime_grad
table(sea_data$ontime_grad, useNA = "always")
# Chunk 19: check_grad_vars_others
table(sea_data$transferout, useNA = "always")
table(transfer = sea_data$transferout, grad = sea_data$ontime_grad, useNA = "always")
# Chunk 21: coll_ready_tab
summary(sea_data$vendor_ews_score)
# Chunk 22: conf_matrix_1
set_thresh <- 0.5
conf_count <- table(observed = sea_data$ontime_grad,
pred = sea_data$vendor_ews_score > set_thresh)
conf_count
# Chunk 23
set_thresh <- mean(sea_data$vendor_ews_score)
conf_count <- table(observed = sea_data$ontime_grad,
pred = sea_data$vendor_ews_score > set_thresh)
conf_count
# Create a proportion table and round for easier interpretation
round(
prop.table(conf_count),
digits = 3
)
# Chunk 24: math_score_explore
summary(sea_data$scale_score_7_math)
hist(sea_data$scale_score_7_math)
# Chunk 25: mean_score_by_demog
# TODO: Replace this with a visualization
by(sea_data$scale_score_7_math, sea_data$coop_name_g7, FUN = mean,
na.rm = TRUE)
by(sea_data$scale_score_7_math, sea_data$frpl_7, FUN = mean,
na.rm = TRUE)
# Chunk 26: comparison_of_preds
effect_size_diff(sea_data$scale_score_7_math, sea_data$ontime_grad,
na.rm = TRUE)
effect_size_diff(sea_data$pct_days_absent_7, sea_data$ontime_grad,
na.rm = TRUE)
# Chunk 27: absence_categories
sea_data$pct_absent_cat <- round(sea_data$pct_days_absent_7, digits = 0)
table(sea_data$pct_absent_cat)
sea_data$pct_absent_cat[sea_data$pct_absenct_cat >= 30] <- 30
# Chunk 28: plot_absence_categories
# TODO - Update this plot sequence to ggplot2
sea_data <- sea_data %>%
group_by(pct_absent_cat) %>% # perform the operation for each value
mutate(abs_ontime_grad = mean(ontime_grad, na.rm = TRUE)) # add a new variable
plot(sea_data$pct_absent_cat, sea_data$abs_ontime_grad)
# Chunk 29: match_score_hists
hist(sea_data$scale_score_7_math)
sea_data$scale_score_7_math[sea_data$scale_score_7_math < 0] <- NA
hist(sea_data$scale_score_7_math)
# Chunk 30: math_grad_comparison
sea_data <- sea_data %>%
mutate(math_7_cut = ntile(scale_score_7_math, n = 100)) %>%
group_by(math_7_cut) %>% # perform the operation for each value
mutate(math_7_ontime_grad = mean(ontime_grad, na.rm=TRUE)) # add a new variable
plot(sea_data$math_7_cut, sea_data$math_7_ontime_grad)
setwd("C:/Users/Jared/GitHub/opensdp_PA_guide/guide")
# Chunk 1: knitrSetup
# Set options for knitr
library(knitr)
knitr::opts_chunk$set(comment=NA, warning=FALSE, echo=TRUE,
root.dir = normalizePath("../"),
error=FALSE, message=FALSE, fig.align='center',
fig.width=8, fig.height=6, dpi = 144,
fig.path = "../figure/",
cache.path = "../cache/")
options(width=80)
# Chunk 3: loadWorkspace
# Load the packages you need
library(dplyr)
library(pROC)
library(devtools)
library(future)
# Load the helper functions not in packages
source("../R/functions.R")
# Read in the data
# This command assumes that the data is in a folder called data, below your
# current working directory. You can check your working directory with the
# getwd() command, and you can set your working directory using the RStudio
# environment, or the setwd() command.
load("../data/montucky.rda")
# Chunk 4: check_sid
nrow(sea_data) == n_distinct(sea_data$sid)
# Chunk 5: check_first_sid
table(sea_data$sid == sea_data$sid[[1]]) # test how many times the first sid appears
# Chunk 6: check_sid_by_lea
length(unique(sea_data$sch_g7_lea_id)) # test how many LEAs are in our data
# Chunk 7: check_lea_sid
nrow(sea_data) == n_distinct(sea_data$sid, sea_data$sch_g7_lea_id)
# Chunk 8: make_sid_uniq
sea_data$sid <- paste(sea_data$sid, sea_data$sch_g7_lea_id, sep = "-")
# Chunk 9: check_sid_uniq2
nrow(sea_data) == n_distinct(sea_data$sid)
# Chunk 10: tabulate_years
table(sea_data$year)
table(sea_data$cohort_year)
table(sea_data$cohort_grad_year)
# Chunk 11: tabulate_grad_vars
table(sea_data$year_of_graduation == sea_data$cohort_grad_year)
table(sea_data$ontime_grad)
# Chunk 12: tabulate_grad_vars_years
table(sea_data$year_of_graduation <= sea_data$cohort_grad_year + 1)
# Chunk 13: check_schandlea_names
length(unique(sea_data$first_hs_name))
length(unique(sea_data$first_hs_lea_id))
table(sea_data$coop_name_g7, useNA = "always")
# Chunk 14: check_coops
my_coop <- sea_data$coop_name_g7[50] # select the coop for the 50th observation
# Which districts are in this coop and how many 7th graders do we have for each?
table(sea_data$sch_g7_lea_id[sea_data$coop_name_g7 == my_coop],
useNA = "always")
# which schools?
table(sea_data$sch_g7_name[sea_data$coop_name_g7 == my_coop],
useNA = "always")
# Chunk 15
table(sea_data$male, useNA="always")
# Chunk 18: check_ontime_grad
table(sea_data$ontime_grad, useNA = "always")
# Chunk 19: check_grad_vars_others
table(sea_data$transferout, useNA = "always")
table(transfer = sea_data$transferout, grad = sea_data$ontime_grad, useNA = "always")
# Chunk 21: coll_ready_tab
summary(sea_data$vendor_ews_score)
# Chunk 22: conf_matrix_1
set_thresh <- 0.5
conf_count <- table(observed = sea_data$ontime_grad,
pred = sea_data$vendor_ews_score > set_thresh)
conf_count
# Chunk 23
set_thresh <- mean(sea_data$vendor_ews_score)
conf_count <- table(observed = sea_data$ontime_grad,
pred = sea_data$vendor_ews_score > set_thresh)
conf_count
# Create a proportion table and round for easier interpretation
round(
prop.table(conf_count),
digits = 3
)
# Chunk 24: math_score_explore
summary(sea_data$scale_score_7_math)
hist(sea_data$scale_score_7_math)
# Chunk 25: mean_score_by_demog
# TODO: Replace this with a visualization
by(sea_data$scale_score_7_math, sea_data$coop_name_g7, FUN = mean,
na.rm = TRUE)
by(sea_data$scale_score_7_math, sea_data$frpl_7, FUN = mean,
na.rm = TRUE)
# Chunk 26: comparison_of_preds
effect_size_diff(sea_data$scale_score_7_math, sea_data$ontime_grad,
na.rm = TRUE)
effect_size_diff(sea_data$pct_days_absent_7, sea_data$ontime_grad,
na.rm = TRUE)
# Chunk 27: absence_categories
sea_data$pct_absent_cat <- round(sea_data$pct_days_absent_7, digits = 0)
table(sea_data$pct_absent_cat)
sea_data$pct_absent_cat[sea_data$pct_absenct_cat >= 30] <- 30
# Chunk 28: plot_absence_categories
# TODO - Update this plot sequence to ggplot2
sea_data <- sea_data %>%
group_by(pct_absent_cat) %>% # perform the operation for each value
mutate(abs_ontime_grad = mean(ontime_grad, na.rm = TRUE)) # add a new variable
plot(sea_data$pct_absent_cat, sea_data$abs_ontime_grad)
# Chunk 29: match_score_hists
hist(sea_data$scale_score_7_math)
sea_data$scale_score_7_math[sea_data$scale_score_7_math < 0] <- NA
hist(sea_data$scale_score_7_math)
# Chunk 30: math_grad_comparison
sea_data <- sea_data %>%
mutate(math_7_cut = ntile(scale_score_7_math, n = 100)) %>%
group_by(math_7_cut) %>% # perform the operation for each value
mutate(math_7_ontime_grad = mean(ontime_grad, na.rm=TRUE)) # add a new variable
plot(sea_data$math_7_cut, sea_data$math_7_ontime_grad)
str(sea_data)
class(sea_data)
setwd("C:/Users/Jared/GitHub/opensdp_PA_guide/guide")
# Chunk 1: knitrSetup
# Set options for knitr
library(knitr)
knitr::opts_chunk$set(comment=NA, warning=FALSE, echo=TRUE,
root.dir = normalizePath("../"),
error=FALSE, message=FALSE, fig.align='center',
fig.width=8, fig.height=6, dpi = 144,
fig.path = "../figure/",
cache.path = "../cache/")
options(width=80)
# Chunk 3: loadWorkspace
# Load the packages you need
library(dplyr)
library(pROC)
library(devtools)
library(future)
# Load the helper functions not in packages
source("../R/functions.R")
# Read in the data
# This command assumes that the data is in a folder called data, below your
# current working directory. You can check your working directory with the
# getwd() command, and you can set your working directory using the RStudio
# environment, or the setwd() command.
load("../data/montucky.rda")
# Chunk 4: check_sid
nrow(sea_data) == n_distinct(sea_data$sid)
# Chunk 5: check_first_sid
table(sea_data$sid == sea_data$sid[[1]]) # test how many times the first sid appears
# Chunk 6: check_sid_by_lea
length(unique(sea_data$sch_g7_lea_id)) # test how many LEAs are in our data
# Chunk 7: check_lea_sid
nrow(sea_data) == n_distinct(sea_data$sid, sea_data$sch_g7_lea_id)
# Chunk 8: make_sid_uniq
sea_data$sid <- paste(sea_data$sid, sea_data$sch_g7_lea_id, sep = "-")
# Chunk 9: check_sid_uniq2
nrow(sea_data) == n_distinct(sea_data$sid)
# Chunk 10: tabulate_years
table(sea_data$year)
table(sea_data$cohort_year)
table(sea_data$cohort_grad_year)
# Chunk 11: tabulate_grad_vars
table(sea_data$year_of_graduation == sea_data$cohort_grad_year)
table(sea_data$ontime_grad)
# Chunk 12: tabulate_grad_vars_years
table(sea_data$year_of_graduation <= sea_data$cohort_grad_year + 1)
# Chunk 13: check_schandlea_names
length(unique(sea_data$first_hs_name))
length(unique(sea_data$first_hs_lea_id))
table(sea_data$coop_name_g7, useNA = "always")
# Chunk 14: check_coops
my_coop <- sea_data$coop_name_g7[50] # select the coop for the 50th observation
# Which districts are in this coop and how many 7th graders do we have for each?
table(sea_data$sch_g7_lea_id[sea_data$coop_name_g7 == my_coop],
useNA = "always")
# which schools?
table(sea_data$sch_g7_name[sea_data$coop_name_g7 == my_coop],
useNA = "always")
# Chunk 15
table(sea_data$male, useNA="always")
# Chunk 18: check_ontime_grad
table(sea_data$ontime_grad, useNA = "always")
# Chunk 19: check_grad_vars_others
table(sea_data$transferout, useNA = "always")
table(transfer = sea_data$transferout, grad = sea_data$ontime_grad, useNA = "always")
# Chunk 21: coll_ready_tab
summary(sea_data$vendor_ews_score)
# Chunk 22: conf_matrix_1
set_thresh <- 0.5
conf_count <- table(observed = sea_data$ontime_grad,
pred = sea_data$vendor_ews_score > set_thresh)
conf_count
# Chunk 23
set_thresh <- mean(sea_data$vendor_ews_score)
conf_count <- table(observed = sea_data$ontime_grad,
pred = sea_data$vendor_ews_score > set_thresh)
conf_count
# Create a proportion table and round for easier interpretation
round(
prop.table(conf_count),
digits = 3
)
# Chunk 24: math_score_explore
summary(sea_data$scale_score_7_math)
hist(sea_data$scale_score_7_math)
# Chunk 25: mean_score_by_demog
# TODO: Replace this with a visualization
by(sea_data$scale_score_7_math, sea_data$coop_name_g7, FUN = mean,
na.rm = TRUE)
by(sea_data$scale_score_7_math, sea_data$frpl_7, FUN = mean,
na.rm = TRUE)
# Chunk 26: comparison_of_preds
effect_size_diff(sea_data$scale_score_7_math, sea_data$ontime_grad,
na.rm = TRUE)
effect_size_diff(sea_data$pct_days_absent_7, sea_data$ontime_grad,
na.rm = TRUE)
# Chunk 27: absence_categories
sea_data$pct_absent_cat <- round(sea_data$pct_days_absent_7, digits = 0)
table(sea_data$pct_absent_cat)
sea_data$pct_absent_cat[sea_data$pct_absenct_cat >= 30] <- 30
# Chunk 28: plot_absence_categories
# TODO - Update this plot sequence to ggplot2
sea_data <- sea_data %>%
group_by(pct_absent_cat) %>% # perform the operation for each value
mutate(abs_ontime_grad = mean(ontime_grad, na.rm = TRUE)) %>% # add a new variable
as.data.frame()
plot(sea_data$pct_absent_cat, sea_data$abs_ontime_grad)
# Chunk 29: match_score_hists
hist(sea_data$scale_score_7_math)
sea_data$scale_score_7_math[sea_data$scale_score_7_math < 0] <- NA
hist(sea_data$scale_score_7_math)
# Chunk 30: math_grad_comparison
sea_data <- sea_data %>%
mutate(math_7_cut = ntile(scale_score_7_math, n = 100)) %>%
group_by(math_7_cut) %>% # perform the operation for each value
mutate(math_7_ontime_grad = mean(ontime_grad, na.rm=TRUE)) %>% # add a new variable
as.data.frame()
plot(sea_data$math_7_cut, sea_data$math_7_ontime_grad)
for(var in c("coop_name_g7", "male", "race_ethnicity")){
print(var)
print(
prop.table(table(sea_data[, var],
"missing_math" = is.na(sea_data$pct_days_absent_7)), 1)
)
}
hist(sea_data$pct_days_absent_7)
sea_data$pct_days_absent_7[sea_data$pct_days_absent_7 > 100] <- NA
hist(sea_data$pct_days_absent_7)
math_model <- glm(ontime_grad ~ scale_score_7_math, data = sea_data,
family = "binomial") # family tells R we want to fit a logistic
summary(math_model)
logit_rsquared(math_model)
math_model2 <- glm(ontime_grad ~ scale_score_7_math +
I(scale_score_7_math^2) + I(scale_score_7_math^3),
data = sea_data,
family = "binomial") # family tells R we want to fit a logistic
logit_rsquared(math_model2)
absence_model <- glm(ontime_grad ~ pct_days_absent_7, data = sea_data,
family = "binomial")
summary(absence_model)
logit_rsquared(absence_model)
combined_model <- glm(ontime_grad ~ pct_days_absent_7 + scale_score_7_math,
data = sea_data, family = "binomial")
summary(combined_model)
logit_rsquared(combined_model)
sea_data$grad_pred <- predict(combined_model, newdata = sea_data,
type = "response") # this tells R to give us a probability
table(is.na(sea_data$grad_pred))
basic_thresh <- mean(sea_data$ontime_grad)
basic_thresh
sea_data$grad_indicator <- ifelse(sea_data$grad_pred > basic_thresh, 1, 0)
table(sea_data$grad_indicator, useNA = "always")
sea_data <- sea_data %>%
mutate(grad_pred_cut = ntile(grad_pred, n = 100)) %>%
group_by(grad_pred_cut) %>% # perform the operation for each value
mutate(grad_pred_cut_grad = mean(ontime_grad, na.rm=TRUE)) # add a new variable
plot(sea_data$grad_pred_cut, sea_data$grad_pred_cut_grad)
prop.table(
table(
grad = sea_data$ontime_grad,
pred = sea_data$grad_indicator)) %>% # shorthand way to round
round(3)
new_thresh <- basic_thresh - 0.05
prop.table(table(Observed = sea_data$ontime_grad,
Predicted = sea_data$grad_pred > new_thresh)) %>%
round(3)
prop.table(table(Observed = sea_data$ontime_grad,
Predicted = sea_data$grad_pred > new_thresh,
useNA = "always")) %>% round(3)
table(Grad = sea_data$ontime_grad,
miss_math = is.na(sea_data$scale_score_7_math)) %>%
prop.table(2) %>%  # get proportions by columns
round(3) # round
table(Grad = sea_data$ontime_grad,
miss_abs = is.na(sea_data$pct_days_absent_7)) %>%
prop.table(2) %>% # get proportions by columns
round(3) # round
absence_model <- glm(ontime_grad ~ pct_days_absent_7,
data = sea_data[is.na(sea_data$scale_score_7_math),],
family = "binomial")
sea_data$grad_pred_2 <- predict(absence_model, newdata = sea_data,
type = "response")
summary(absence_model)
table(sea_data$grad_indicator, useNA="always")
sea_data$grad_indicator[is.na(sea_data$grad_pred) &
sea_data$grad_pred_2 < new_thresh] <- 0
sea_data$grad_indicator[is.na(sea_data$grad_pred) &
sea_data$grad_pred_2 >= new_thresh] <- 1
table(sea_data$grad_indicator, useNA="always")
table(sea_data$grad_indicator, sea_data$ontime_grad, useNA = "always")
sea_data$grad_indicator[is.na(sea_data$grad_indicator)] <- 0
table(Observed = sea_data$ontime_grad, Predicted = sea_data$grad_indicator) %>%
prop.table %>% round(3)
table(Observed = sea_data$ontime_grad, Predicted = sea_data$grad_indicator) %>%
prop.table(margin = 1) %>% round(3)
roc(sea_data$ontime_grad, sea_data$grad_indicator) %>% plot
roc(sea_data$ontime_grad, sea_data$grad_pred) %>% plot
